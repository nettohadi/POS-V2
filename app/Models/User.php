<?php

namespace App\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Notifications\Notifiable;
use App\Models\Base\BaseUser;
use Laravel\Sanctum\HasApiTokens;

class User extends BaseUser
{
    use HasFactory, Notifiable, HasApiTokens;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $guarded = [];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password','email_verified_at'
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($model){self::CheckBeforeCreation($model);});
    }

    public function getToken($password, $deviceName='device_x'){
        $this->checkPassword($password);
        return $this->createToken($deviceName)->plainTextToken;
    }

    public function scopeFilterByName($query, $name){

        if(!$name) return $query;

        return $query->where("name","like","%{$name}%");
    }

    public function roles()
    {
        return $this->belongsToMany(Role::class)->withTimestamps();
    }

    public function assignRole($role)
    {
        $this->roles()->sync($role,false);
    }

    public function permissions()
    {
        return $this->roles->map->permissions->flatten()->pluck('name')->unique();
    }

    public static function checkBeforeCreation($model)
    {
        if($model['password_confirm']){
            unset($model['password_confirm']);
        }
    }
}
